rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user has a specific role.
    function hasRole(role) {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Helper function to check if a user has one of several admin-level roles.
    function isAdmin() {
      let adminRoles = ['admin', 'branch_manager', 'treasurer', 'accountant', 'teller', 'auditor'];
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in adminRoles;
    }
    
    // By default, deny all reads and writes.
    match /{document=**} {
      allow read, write: if false;
    }
    
    // --- User and Application Data ---
    
    // Users can read their own profile, admins can read any.
    // Users can update their own profile, admins can update any.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow update: if request.auth.uid == userId || isAdmin();
      allow create: if isAdmin(); // Only admins can create new users directly.
    }
    
    // Public can submit an application, admins can manage them.
    match /applications/{appId} {
      allow create;
      allow read, update: if isAdmin();
    }
    
    // --- Core Financial Products (Read-only for members) ---
    match /loanProducts/{productId} {
      allow read: if request.auth.uid != null;
      allow write: if isAdmin();
    }
    
    match /depositProducts/{productId} {
      allow read: if request.auth.uid != null;
      allow write: if isAdmin();
    }
    
    match /savingsSchemes/{schemeId} {
      allow read: if request.auth.uid != null;
      allow write: if isAdmin();
    }
    
    // --- Financial Applications (Members can create, admins manage) ---
    match /loanApplications/{appId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update: if isAdmin();
    }
    
    match /depositApplications/{appId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update: if isAdmin();
    }
    
    match /savingsApplications/{appId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update: if isAdmin();
    }
    
    // --- Active Accounts (Members read own, admins manage) ---
    
    // User can read their own loan accounts. Admins can read all.
    match /activeLoans/{loanId} {
      allow read: if get(/databases/$(database)/documents/activeLoans/$(loanId)).data.userId == request.auth.uid || isAdmin();
      allow write: if isAdmin();
    }
    
    // User can read their own deposit accounts. Admins can read all.
    match /activeDeposits/{depositId} {
      allow read: if get(/databases/$(database)/documents/activeDeposits/$(depositId)).data.userId == request.auth.uid || isAdmin();
       allow write: if isAdmin();
    }
    
    // User can read their own savings accounts. Admins can read all.
    match /savingsAccounts/{accountId} {
      allow read: if get(/databases/$(database)/documents/savingsAccounts/$(accountId)).data.userId == request.auth.uid || isAdmin();
      allow write: if isAdmin();
    }
    
    // Transactions: Users can only read their own. Admins can read all.
    // Transactions can only be created by admins (server-side actions).
    match /transactions/{txId} {
      allow read: if get(/databases/$(database)/documents/transactions/$(txId)).data.userId == request.auth.uid || isAdmin();
      allow write: if isAdmin();
    }
    
     // --- Support & Notifications ---
     
    // Users can create tickets for themselves. Users can read/update their own tickets. Admins can manage all.
    match /supportTickets/{ticketId} {
      allow create: if request.auth.uid == request.resource.data.userId;
      allow read, update: if get(/databases/$(database)/documents/supportTickets/$(ticketId)).data.userId == request.auth.uid || isAdmin();
    }
    
    // Notifications can only be written by admins.
    // Users can read global notifications or notifications targeted to them.
    match /notifications/{notificationId} {
      allow write: if isAdmin();
      allow read: if request.auth.uid != null && 
                     (resource.data.target == 'all' || resource.data.userId == request.auth.uid);
    }
    
    // --- Admin & Settings Collections (Admin-only access) ---
    
    match /chartOfAccounts/{accountId} {
       allow read, write: if isAdmin();
    }
    
     match /journalEntries/{entryId} {
       allow read, write: if isAdmin();
    }
    
    match /settings/{settingId} {
      allow read: if request.auth.uid != null; // All authenticated users can read settings
      allow write: if isAdmin();
    }
    
    match /branches/{branchId} {
      allow read, write: if isAdmin();
    }
    
    match /holidays/{holidayId} {
       allow read: if request.auth.uid != null;
       allow write: if isAdmin();
    }
  }
}
