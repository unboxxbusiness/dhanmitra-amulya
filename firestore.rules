
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin roles
    function isAdmin() {
      return request.auth.token.role in ['admin', 'branch_manager', 'treasurer', 'accountant', 'teller', 'auditor'];
    }

    // Users can only read their own profile, admins can read/write all.
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      allow write: if isAdmin();
      allow update: if request.auth.uid == userId || isAdmin();
    }
    
    // Public read for products, schemes, and settings. Write is admin-only.
    match /loanProducts/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /depositProducts/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /savingsSchemes/{docId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }
    match /settings/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
     match /branches/{docId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    match /holidays/{docId} {
       allow read: if request.auth != null;
       allow write: if isAdmin();
    }

    // Applications can be created by anyone, but only read/updated by admins.
    match /applications/{appId} {
        allow create: if true; // Public self-registration
        allow read, update: if isAdmin();
    }
    match /loanApplications/{appId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, update: if isAdmin();
    }
    match /depositApplications/{appId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, update: if isAdmin();
    }
    match /savingsApplications/{appId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, update: if isAdmin();
    }
    
    // Accounts and transactions are firewalled. Members can only access their own data.
    match /activeLoans/{loanId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow write: if isAdmin(); // Only server actions can write
    }
    match /activeDeposits/{depositId} {
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        allow write: if isAdmin();
    }
    match /savingsAccounts/{accountId} {
        allow read: if request.auth.uid == resource.data.userId || isAdmin();
        allow write: if isAdmin();
    }
    match /transactions/{txId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin();
      allow write: if isAdmin(); // Only server actions can write
    }

    // Support tickets can be created and read by the owner, or by admins.
    match /supportTickets/{ticketId} {
        allow create: if request.auth.uid == request.resource.data.userId;
        allow read, update: if request.auth.uid == resource.data.userId || isAdmin();
    }

    // Notifications: Admins can create. Users can read their own or global notices.
    match /notifications/{notificationId} {
      allow create: if isAdmin();
      allow read: if request.auth.uid == resource.data.userId || resource.data.target == 'all';
    }

    // Accounting collections are admin-only.
    match /chartOfAccounts/{docId} {
        allow read, write: if isAdmin();
    }
    match /journalEntries/{docId} {
        allow read, write: if isAdmin();
    }
  }
}
